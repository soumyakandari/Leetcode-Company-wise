Given an array A of size N. The elements of the array consists of positive integers. You have to find the largest element with minimum frequency.

Input Format: First line of input contains number of testcases T. For each testcase there will be two lines. First line contains N, next line contains N elements separated by spaces.

Output Format: For each testcase, print the largest element with minimum frequency.

User Task:
Your task is to complete the provided function LargButMinFreq(A, n) which accepts array A and n. Hence you have to return the largest element with minimum frequency.
Input:
1
5
2 2 5 50 1

Output:
50

#USING HASHMAP
T.C- O(1)
S.C-O(N)

JAVA CODE-
class Geeks {
    // Function to find largest number with minimum frequency
    public static int LargButMinFreq(int arr[], int n) {
        //USING HASHMAP
        HashMap<Integer,Integer> count= new HashMap<>();
        //put freq of each element
        int maxelement=0;
        
        for(int i:arr)
          count.put(i,count.getOrDefault(i,0)+1);
         
        //find the largest element with freq=1
         for(Map.Entry<Integer,Integer> e:count.entrySet())
             {
                 //find minimum freq
                 if(e.getValue()==1)
                   {
                     if(e.getKey()>maxelement)
                     maxelement= e.getKey();
                   }
             }
        return maxelement;     
         
    }
}
