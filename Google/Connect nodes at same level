Given a binary tree, connect the nodes that are at same level. You'll be given an addition nextRight pointer for the same.

Initially, all the nextRight pointers point to garbage values. Your function should set these pointers to point next right for each node.
       10                       10 ------> NULL
      / \                       /      \
     3   5       =>     3 ------> 5 --------> NULL
    / \     \               /  \           \
   4   1   2          4 --> 1 -----> 2 -------> NULL
   Input:
     3
   /  \
  1    2
Output:
3 1 2
1 3 2
Explanation:The connected tree is
        3 ------> NULL
     /    \
    1-----> 2 ------ NULL
    
 #USING BFS
 AND A PREV NODE THAT POINTS TO CURRR
 
 JAVA CODE-
 class Solution
{
    //Function to connect nodes at same level.
    public void connect(Node root)
    {
        //using bfs
        if(root==null)
          return ;
        Queue<Node> q= new LinkedList<>();
        q.add(root);
        while(!q.isEmpty())
          { 
              int size=q.size();
              Node prev=null;  //node that points to the prev node
              for(int i=0;i<size;i++)
              {
                  Node curr= q.poll();
                  if(i==0) //first node 
                     prev=curr;
                 else {  //if there exist a prev point to next node i.e curr
                      prev.nextRight = curr;
                  prev=curr; //update prev 
                
                 }
                  if(curr.left!=null)
                      q.add(curr.left);
                if(curr.right!=null)
                   q.add(curr.right);
                  
              } 
          }
    }
}
