You are given an m x n binary matrix grid. An island is a group of 1's (representing land) connected 4-directionally (horizontal or vertical.) You may assume all four edges of the grid are surrounded by water.

The area of an island is the number of cells with a value 1 in the island.

Return the maximum area of an island in grid. If there is no island, return 0.


// similar to no . pf islands
using DFS

T.c - O(N2)
S.c- o(1)

JAVA code-
class Solution {
    public int maxAreaOfIsland(int[][] grid) {
        int row= grid.length;
        int col=grid[0].length;
        int res=0;
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                
                if(grid[i][j]==1){
                    
                    res=Math.max(res,dfsarea(i,j,grid));
                    
                }
                
            }
        }
       
        return res;
    }
    public int dfsarea(int i, int j , int[][] grid){
        
        if(i<0 || i>=grid.length || j<0 || j>=grid[0].length || grid[i][j]==0)
            return 0;
        
        grid[i][j]=0;
        
        return 1+ dfsarea(i+1,j,grid)+  dfsarea(i-1,j,grid) + dfsarea(i,j+1,grid)+ dfsarea(i,j-1,grid);     
        
    }
}
