Given an array arr[] of n integers. Check whether it contains a triplet that sums up to zero. 

Example 1:

Input: n = 5, arr[] = {0, -1, 2, -3, 1}
Output: 1
Explanation: 0, -1 and 1 forms a triplet
with sum equal to 0.

#USING THREE POINTERS APPROACH

T.C -O(N2)
S.C -O(1)

JAVA CODE-
class Solution
{
    // arr[]: input array
    // n: size of the array
    //Function to find triplets with zero sum.
	public boolean findTriplets(int arr[] , int n)
    {   Arrays.sort(arr);
       for(int i=0;i<n-2;i++)
       {
           int target= -arr[i];
           int left=i+1;
           int right=n-1;
           while(left<right) 
           {
               int sum= arr[left]+arr[right];
               if(sum>target)
                  right--;
                else if(sum<target)
                   left++;
                else if(sum==target)
                   return true;
           }
         
       }
       return false;
    }
}
