Given an integer n, return the number of prime numbers that are strictly less than n.

 Input: n = 10
Output: 4
Explanation: There are 4 prime numbers less than 10, they are 2, 3, 5, 7.

T.C -O(N)
S.C -O(1)

ALGO-
1.assume all the num to be prime from 0 to n
2. check for those who are not prime and mark false
3. if i is prime, mark all its multiple false //prime can only have 1 factor
4.count all the prime left

JAVA CODE-
class Solution {
    public int countPrimes(int n) {
       //boolean with all prime at first
        boolean [] prime= new boolean[n];
        //true --> all num are prime
        for(int i=0;i<n;i++)
              prime[i]=true;
        //check for those not prime
        for(int i=2;i*i<n;i++)
        {
            //if num is prime make all its multiple false
            if(prime[i])
            {
                for(int j=i;j*i<n;j++) 
                {
                    prime[i*j]=false;
                }
            }   
        }
        //count the number of primes
        int count=0;
        for(int i=2;i<n;i++)
        {
            if(prime[i])
                count++;
        }
        return count;
    }
}
